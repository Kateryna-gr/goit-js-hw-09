{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,QACxBD,SAASC,cAAc,mBAE/BC,iBAAiB,SAErB,SAAiBC,G,kBAQbC,YAAW,W,OAIf,SAAuBC,EAAUC,GACTC,KAAKC,SAAW,GAEpCC,EAAAZ,GAASa,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,OAEtEG,EAAAZ,GAASa,OAAOG,QAAQ,sBAAuCD,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,CATpDQ,CAAcC,EAAGT,E,GAAQA,E,EAP5CH,EAAIa,iBACJ,IAAIV,EAAQW,SAASlB,EAAKmB,SAASZ,MAAMa,OACrCC,EAAOH,SAASlB,EAAKmB,SAASE,KAAKD,OACnCE,EAASJ,SAASlB,EAAKmB,SAASG,OAAOF,OAC3CG,QAAQC,IAAIjB,EAAOc,EAAMC,GAEzB,IAAK,IAAIG,EAAI,EAAGA,GAAKH,EAAQG,GAAK,EAAGlB,GAASc,EAAIK,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nconst btn = document.querySelector('[type=\"submit\"]');\n\nbtn.addEventListener('click', handler);\n\nfunction handler(evt){\n  evt.preventDefault();\n  let delay = parseInt(form.elements.delay.value);\n  let step = parseInt(form.elements.step.value);\n  let amount = parseInt(form.elements.amount.value);\n  console.log(delay, step, amount);\n\n  for (let i = 1; i <= amount; i += 1, delay += step) {\n    setTimeout(() => createPromise(i, delay), delay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","evt","setTimeout","position","delay","Math","random","$parcel$interopDefault","Notify","success","concat","failure","$ce04d3a99e08e73b$var$createPromise","i","preventDefault","parseInt","elements","value","step","amount","console","log","i1","_loop"],"version":3,"file":"03-promises.bd7eda30.js.map"}